#!/usr/bin/env ruby

NOTES = {
  # Problem
  "Hiring is broken!" => 3,
  "High demand developers are bombed with emails, linkedin messages and calls" => 1,
  "even if they are not looking for a new challenge" => 5,
  "Companies have to reach out to hundreds of potential candidates" => 1,
  "rarely getting any responses" => 5,
  # Solution
  "Honeypot is here to change that!" => 2,
  "we are a reverse job platform" => 1,
  "on Honeypot developers post their interest for a new challenge" => 1,
  "and companies can pitch developers with challenges and opportunities they are facing." => 2,
  "Lets look how that works...." => 120
  # normal login, demo profile companies pay on hire only
}

class Demo
  MIN_IN_SEC = 60
  MAX_TIME = 5 * MIN_IN_SEC # 5 min for demo
  HUMAN_TYPING_DELAY = 0.1

  def initialize(notes)
    @notes = notes
  end

  def call
    if demo_too_long?
      puts "The demo time exceeds #{MAX_TIME / MIN_IN_SEC} minutes"
      exit 1
    end
    type notes
    thank_you
  end

  private
  attr_reader :notes

  def demo_length
    wait_time = notes.values.reduce(:+)
    time_spent_typing = notes.keys.map(&:length).reduce(:+) * HUMAN_TYPING_DELAY
    wait_time + time_spent_typing
  end

  def demo_too_long?
    demo_length > MAX_TIME
  end

  def clear(text)
    print "\r"
    print " " * text.length
    print "\r"
  end

  def type(notes)
    notes.each do |text, time|
      text.each_char do |char|
        print char
        sleep HUMAN_TYPING_DELAY
      end
      sleep time
      clear text
    end
  end

  def thank_you
    puts "Thank you!"
    sleep MAX_TIME - demo_length
    close_chrome
    puts ''
    puts "Q&A's"
  end

  def close_chrome
    # close any open chrome to force stop demo ¯\_(ツ)_/¯
    system("killall -SIGQUIT -m 'Google Chrome'")
  end
end

Demo.new(NOTES).call if __FILE__ == $0
